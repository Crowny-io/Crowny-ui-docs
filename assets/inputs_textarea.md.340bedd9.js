import{o as a,c as e,w as t,e as s,a as n}from"./app.0989115c.js";const r={name:"Textarea",props:{error:{type:Boolean,default:!1}}},p=t()(((t,s,n,r,p,o)=>(a(),e("textarea",{class:[{error:n.error},"crowny__input__text"],placeholder:"Placeholder text",required:""},null,2))));r.render=p,r.__scopeId="data-v-99a85a4e";const o=n('<h1 id="textarea"><a class="header-anchor" href="#textarea" aria-hidden="true">#</a> Textarea</h1><h2 id="default-textarea"><a class="header-anchor" href="#default-textarea" aria-hidden="true">#</a> Default textarea</h2><p>The textarea is used wherever any textual input is needed.</p><h4 id="preview"><a class="header-anchor" href="#preview" aria-hidden="true">#</a> Preview</h4>',4),l=n('<div class="warning custom-block"><p class="custom-block-title">Important</p><p>When the textarea receives a value the border state will change. For this we use the <code>required</code> attribute. We require any value from the user for the textarea in order for the border state to change.</p></div><h4 id="markup"><a class="header-anchor" href="#markup" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="error-state"><a class="header-anchor" href="#error-state" aria-hidden="true">#</a> Error state</h2><p>We show the user the textarea error state when the textarea received an invalid value or if the back-end throws us an error.</p><p>In order to show the error state we append the class <code>error</code> to the textarea.</p><h4 id="preview-1"><a class="header-anchor" href="#preview-1" aria-hidden="true">#</a> Preview</h4>',7),c=n('   <h4 id="markup-1"><a class="header-anchor" href="#markup-1" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="disabled-state"><a class="header-anchor" href="#disabled-state" aria-hidden="true">#</a> Disabled state</h2><p>We provide the option to disable the textarea when necessary. In order to disable the textarea we use the <code>disabled</code> attribute.</p><h4 id="preview-2"><a class="header-anchor" href="#preview-2" aria-hidden="true">#</a> Preview</h4>',6),u=n('   <h4 id="markup-2"><a class="header-anchor" href="#markup-2" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',3),i='{"title":"Textarea","description":"","frontmatter":{},"headers":[{"level":2,"title":"Default textarea","slug":"default-textarea"},{"level":2,"title":"Error state","slug":"error-state"},{"level":2,"title":"Disabled state","slug":"disabled-state"}],"relativePath":"inputs/textarea.md","lastUpdated":1624365730288}',d={};const h=Object.assign(d,{expose:[],setup:function(t){return(t,n)=>(a(),e("div",null,[o,s(r),l,s(r,{error:!0}),c,s(r,{disabled:""}),u]))}});export default h;export{i as __pageData};
