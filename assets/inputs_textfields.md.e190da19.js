import{o as a,c as t,w as e,b as s,a as n}from"./app.8ce370de.js";const p={name:"Inputs",props:{error:{type:Boolean,default:!1}}},r=e()(((e,s,n,p,r,o)=>(a(),t("input",{type:"text",class:[{error:n.error},"crowny__input__text"],placeholder:"Placeholder text",required:""},null,2))));p.render=r,p.__scopeId="data-v-701a3646";const o=n('<h1 id="textfield"><a class="header-anchor" href="#textfield" aria-hidden="true">#</a> Textfield</h1><h2 id="default-textfield"><a class="header-anchor" href="#default-textfield" aria-hidden="true">#</a> Default textfield</h2><p>The textfield is used wherever any textual input is needed.</p><h4 id="preview"><a class="header-anchor" href="#preview" aria-hidden="true">#</a> Preview</h4>',4),l=n('<div class="warning custom-block"><p class="custom-block-title">Important</p><p>When the textfield receives a value the border state will change. For this we use the <code>required</code> attribute. We require any value from the user for the textfield in order for the border state to change.</p></div><h4 id="markup"><a class="header-anchor" href="#markup" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="error-state"><a class="header-anchor" href="#error-state" aria-hidden="true">#</a> Error state</h2><p>We show the user the textfield error state when the textfield received an invalid value or if the back-end throws us an error.</p><p>In order to show the error state we append the class <code>error</code> to the textfield.</p><h4 id="preview-1"><a class="header-anchor" href="#preview-1" aria-hidden="true">#</a> Preview</h4>',7),u=n('   <h4 id="markup-1"><a class="header-anchor" href="#markup-1" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="disabled-state"><a class="header-anchor" href="#disabled-state" aria-hidden="true">#</a> Disabled state</h2><p>We provide the option to disable the textfield when necessary. In order to disable the textfield we use the <code>disabled</code> attribute.</p><h4 id="preview-2"><a class="header-anchor" href="#preview-2" aria-hidden="true">#</a> Preview</h4>',6),c=n('   <h4 id="markup-2"><a class="header-anchor" href="#markup-2" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Placeholder text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',3),i='{"title":"Textfield","description":"","frontmatter":{},"headers":[{"level":2,"title":"Default textfield","slug":"default-textfield"},{"level":2,"title":"Error state","slug":"error-state"},{"level":2,"title":"Disabled state","slug":"disabled-state"}],"relativePath":"inputs/textfields.md","lastUpdated":1624362838538}',d={};const h=Object.assign(d,{expose:[],setup:function(e){return(e,n)=>(a(),t("div",null,[o,s(p),l,s(p,{error:!0}),u,s(p,{disabled:""}),c]))}});export default h;export{i as __pageData};
