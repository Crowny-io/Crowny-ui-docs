import{o as a,c as n,w as t,b as e,a as s}from"./app.53f93c31.js";const p={name:"Numbers",props:{error:{type:Boolean,default:!1}}},r=t()(((t,e,s,p,r,u)=>(a(),n("input",{type:"number",class:[{error:s.error},"crowny__input__text"],placeholder:"3",required:""},null,2))));p.render=r,p.__scopeId="data-v-cfc0570e";const u=s('<h1 id="number-input"><a class="header-anchor" href="#number-input" aria-hidden="true">#</a> Number input</h1><h2 id="default-number-input"><a class="header-anchor" href="#default-number-input" aria-hidden="true">#</a> Default number input</h2><p>The number input is used whenever the user needs to provide a number.</p><h4 id="preview"><a class="header-anchor" href="#preview" aria-hidden="true">#</a> Preview</h4>',4),o=s('<div class="warning custom-block"><p class="custom-block-title">Important</p><p>When the number input receives a value the border state will change. For this we use the <code>required</code> attribute. We require any value from the user for the number input in order for the border state to change.</p></div><h4 id="markup"><a class="header-anchor" href="#markup" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="error-state"><a class="header-anchor" href="#error-state" aria-hidden="true">#</a> Error state</h2><p>We show the user the number input error state when the number input received an invalid value or if the back-end throws us an error.</p><p>In order to show the error state we append the class <code>error</code> to the number input.</p><h4 id="preview-1"><a class="header-anchor" href="#preview-1" aria-hidden="true">#</a> Preview</h4>',7),c=s('   <h4 id="markup-1"><a class="header-anchor" href="#markup-1" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="disabled-state"><a class="header-anchor" href="#disabled-state" aria-hidden="true">#</a> Disabled state</h2><p>We provide the option to disable the number input when necessary. In order to disable the number input we use the <code>disabled</code> attribute.</p><h4 id="preview-2"><a class="header-anchor" href="#preview-2" aria-hidden="true">#</a> Preview</h4>',6),l=s('   <h4 id="markup-2"><a class="header-anchor" href="#markup-2" aria-hidden="true">#</a> Markup</h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__input__text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',3),i='{"title":"Number input","description":"","frontmatter":{},"headers":[{"level":2,"title":"Default number input","slug":"default-number-input"},{"level":2,"title":"Error state","slug":"error-state"},{"level":2,"title":"Disabled state","slug":"disabled-state"}],"relativePath":"inputs/numbers.md","lastUpdated":1631862308526}',d={};const h=Object.assign(d,{expose:[],setup:function(t){return(t,s)=>(a(),n("div",null,[u,e(p),o,e(p,{error:!0}),c,e(p,{disabled:""}),l]))}});export default h;export{i as __pageData};
