import{_ as p,o as n,c as t,g as c,F as _,p as u,e as h,b as r,a as s,f as o}from"./app.747194c8.js";const k={name:"Indicators",props:{icon:!1}},d=a=>(u("data-v-0311f3e2"),a=a(),h(),a),v={key:0,class:"wrapper"},g=d(()=>r("div",{class:"crowny__indicator background-accents-redryb"},null,-1)),f=d(()=>r("div",{class:"crowny__indicator background-accents-emerald"},null,-1)),b=[g,f],w={key:1,class:"wrapper"},m=s('<div class="crowny__relative__wrapper" data-v-0311f3e2><i class="icon-Bell" data-v-0311f3e2></i><div class="crowny__indicator with__icon background-accents-redryb" data-v-0311f3e2></div></div><div class="crowny__relative__wrapper" data-v-0311f3e2><i class="icon-Bell" data-v-0311f3e2></i><div class="crowny__indicator with__icon background-accents-emerald" data-v-0311f3e2></div></div>',2),I=[m];function y(a,l,e,N,V,P){return n(),t(_,null,[e.icon?c("",!0):(n(),t("div",v,b)),e.icon?(n(),t("div",w,I)):c("",!0)],64)}var i=p(k,[["render",y],["__scopeId","data-v-0311f3e2"]]);const T=s('<h1 id="indicators" tabindex="-1">Indicators <a class="header-anchor" href="#indicators" aria-hidden="true">#</a></h1><h2 id="default-indicator" tabindex="-1">Default indicator <a class="header-anchor" href="#default-indicator" aria-hidden="true">#</a></h2><p>Indicators can be used to give the usera visual indication that something has changed or updated, Something like an unread notification.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The indicators come <strong>without</strong> any background color. Reason being is that we can now apply our global background classes e.g: <code>background-accents-redryb</code> to the indicator.</p></div><h4 id="preview" tabindex="-1">Preview <a class="header-anchor" href="#preview" aria-hidden="true">#</a></h4>',5),S=s(`<h4 id="markup" tabindex="-1">Markup <a class="header-anchor" href="#markup" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__indicator {{ background-classes }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="icon-indicator" tabindex="-1">Icon Indicator <a class="header-anchor" href="#icon-indicator" aria-hidden="true">#</a></h2><p>In some use cases we want to have the default indicator placed on top of an icon e.g: Bell icon, unread status.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The indicators come <strong>without</strong> any background color. Reason being is that we can now apply our global background classes e.g: <code>background-accents-redryb</code> to the indicator.</p></div><h4 id="preview-1" tabindex="-1">Preview <a class="header-anchor" href="#preview-1" aria-hidden="true">#</a></h4>`,6),x=s(`<h4 id="markup-1" tabindex="-1">Markup <a class="header-anchor" href="#markup-1" aria-hidden="true">#</a></h4><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>crowny__indicator {{ background-classes }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),R='{"title":"Indicators","description":"","frontmatter":{},"headers":[{"level":2,"title":"Default indicator","slug":"default-indicator"},{"level":2,"title":"Icon Indicator","slug":"icon-indicator"}],"relativePath":"utils/indicators.md","lastUpdated":1646231734645}',A={},q=Object.assign(A,{setup(a){return(l,e)=>(n(),t("div",null,[T,o(i,{icon:!1}),S,o(i,{icon:!0}),x]))}});export{R as __pageData,q as default};
